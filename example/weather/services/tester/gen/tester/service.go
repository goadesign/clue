// Code generated by goa v3.14.4, DO NOT EDIT.
//
// tester service
//
// Command:
// $ goa gen goa.design/clue/example/weather/services/tester/design -o
// services/tester

package tester

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// The Weather System Tester Service is used to manage the integration testing
// of the weater system
type Service interface {
	// Runs all tests in the iam system
	TestAll(context.Context, *TesterPayload) (res *TestResults, err error)
	// Runs smoke tests in the iam system
	TestSmoke(context.Context) (res *TestResults, err error)
	// Runs tests for the forecaster service
	TestForecaster(context.Context) (res *TestResults, err error)
	// Runs tests for the locator service
	TestLocator(context.Context) (res *TestResults, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "tester"

// APIVersion is the version of the API as defined in the design.
const APIVersion = "0.0.1"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [4]string{"test_all", "test_smoke", "test_forecaster", "test_locator"}

// Collection of test results for grouping by service
type TestCollection struct {
	// Name of the test collection
	Name string
	// Test results
	Results []*TestResult
	// Duration of the tests in ms
	Duration int64
	// Number of tests that passed
	PassCount int
	// Number of tests that failed
	FailCount int
}

// Test result for a single test
type TestResult struct {
	// Name of the test
	Name string
	// Status of the test
	Passed bool
	// Error message if the test failed
	Error *string
	// Duration of the test in ms
	Duration int64
}

// TestResults is the result type of the tester service test_all method.
type TestResults struct {
	// Test collections
	Collections []*TestCollection
	// Duration of the tests in ms
	Duration int64
	// Number of tests that passed
	PassCount int
	// Number of tests that failed
	FailCount int
}

// TesterPayload is the payload type of the tester service test_all method.
type TesterPayload struct {
	// Tests to run. Allows wildcards.
	Include []string
	// Tests to exclude. Allows wildcards.
	Exclude []string
}

// MakeIncludeExcludeBoth builds a goa.ServiceError from an error.
func MakeIncludeExcludeBoth(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "include_exclude_both", false, false, false)
}

// MakeWildcardCompileError builds a goa.ServiceError from an error.
func MakeWildcardCompileError(err error) *goa.ServiceError {
	return goa.NewServiceError(err, "wildcard_compile_error", false, false, false)
}
