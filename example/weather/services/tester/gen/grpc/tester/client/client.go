// Code generated by goa v3.14.2, DO NOT EDIT.
//
// tester gRPC client
//
// Command:
// $ goa gen goa.design/clue/example/weather/services/tester/design -o
// services/tester

package client

import (
	"context"

	testerpb "goa.design/clue/example/weather/services/tester/gen/grpc/tester/pb"
	goagrpc "goa.design/goa/v3/grpc"
	goapb "goa.design/goa/v3/grpc/pb"
	goa "goa.design/goa/v3/pkg"
	"google.golang.org/grpc"
)

// Client lists the service endpoint gRPC clients.
type Client struct {
	grpccli testerpb.TesterClient
	opts    []grpc.CallOption
}

// NewClient instantiates gRPC client for all the tester service servers.
func NewClient(cc *grpc.ClientConn, opts ...grpc.CallOption) *Client {
	return &Client{
		grpccli: testerpb.NewTesterClient(cc),
		opts:    opts,
	}
}

// TestAll calls the "TestAll" function in testerpb.TesterClient interface.
func (c *Client) TestAll() goa.Endpoint {
	return func(ctx context.Context, v any) (any, error) {
		inv := goagrpc.NewInvoker(
			BuildTestAllFunc(c.grpccli, c.opts...),
			EncodeTestAllRequest,
			DecodeTestAllResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// TestSmoke calls the "TestSmoke" function in testerpb.TesterClient interface.
func (c *Client) TestSmoke() goa.Endpoint {
	return func(ctx context.Context, v any) (any, error) {
		inv := goagrpc.NewInvoker(
			BuildTestSmokeFunc(c.grpccli, c.opts...),
			nil,
			DecodeTestSmokeResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			return nil, goa.Fault(err.Error())
		}
		return res, nil
	}
}

// TestForecaster calls the "TestForecaster" function in testerpb.TesterClient
// interface.
func (c *Client) TestForecaster() goa.Endpoint {
	return func(ctx context.Context, v any) (any, error) {
		inv := goagrpc.NewInvoker(
			BuildTestForecasterFunc(c.grpccli, c.opts...),
			nil,
			DecodeTestForecasterResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// TestLocator calls the "TestLocator" function in testerpb.TesterClient
// interface.
func (c *Client) TestLocator() goa.Endpoint {
	return func(ctx context.Context, v any) (any, error) {
		inv := goagrpc.NewInvoker(
			BuildTestLocatorFunc(c.grpccli, c.opts...),
			nil,
			DecodeTestLocatorResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}
