// Code generated by goa v3.5.4, DO NOT EDIT.
//
// locator gRPC client CLI support package
//
// Command:
// $ goa gen
// github.com/crossnokaye/micro/example/weather/services/locator/design -o
// example/weather/services/locator

package client

import (
	"encoding/json"
	"fmt"

	locatorpb "github.com/crossnokaye/micro/example/weather/services/locator/gen/grpc/locator/pb"
)

// BuildGetLocationPayload builds the payload for the locator get_location
// endpoint from CLI flags.
func BuildGetLocationPayload(locatorGetLocationMessage string) (string, error) {
	var err error
	var message locatorpb.GetLocationRequest
	{
		if locatorGetLocationMessage != "" {
			err = json.Unmarshal([]byte(locatorGetLocationMessage), &message)
			if err != nil {
				return "", fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"field\": \"Totam delectus odio consequatur.\"\n   }'")
			}
		}
	}
	v := message.Field
	return v, nil
}
