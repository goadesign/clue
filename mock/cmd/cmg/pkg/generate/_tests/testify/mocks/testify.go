// Code generated by Clue Mock Generator TEST VERSION, DO NOT EDIT.
//
// Command:
// $ cmg gen example.com/c/d/testify

package mocktestify

import (
	"testing"

	"github.com/stretchr/testify/assert"
	"goa.design/clue/mock"

	"example.com/c/d/testify"
)

type (
	Testify struct {
		m      *mock.Mock
		assert *assert.Assertions
	}

	TestifySimpleFunc func(a, b int) bool
)

func NewTestify(t *testing.T) *Testify {
	var (
		m                 = &Testify{mock.New(), assert.New(t)}
		_ testify.Testify = m
	)
	return m
}

func (m *Testify) AddSimple(f TestifySimpleFunc) {
	m.m.Add("Simple", f)
}

func (m *Testify) SetSimple(f TestifySimpleFunc) {
	m.m.Set("Simple", f)
}

func (m *Testify) Simple(a, b int) bool {
	if f := m.m.Next("Simple"); f != nil {
		return f.(TestifySimpleFunc)(a, b)
	}
	m.assert.Fail("unexpected Simple call")
	return false
}

func (m *Testify) HasMore() bool {
	return m.m.HasMore()
}
