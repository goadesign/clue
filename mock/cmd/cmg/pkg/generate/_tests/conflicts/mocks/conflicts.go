// Code generated by Clue Mock Generator TEST VERSION, DO NOT EDIT.
//
// Command:
// $ cmg gen example.com/c/d/conflicts

package mocktesting

import (
	"testing"

	"goa.design/clue/mock"

	testing1 "example.com/c/d/conflicts"
)

type (
	Conflicts struct {
		m *mock.Mock
		t *testing.T
	}

	ConflictsSimpleFunc func(c *testing1.Conflicts) *testing1.Conflicts
)

func NewConflicts(t *testing.T) *Conflicts {
	var (
		m                    = &Conflicts{mock.New(), t}
		_ testing1.Conflicts = m
	)
	return m
}

func (m *Conflicts) AddSimple(f ConflictsSimpleFunc) {
	m.m.Add("Simple", f)
}

func (m *Conflicts) SetSimple(f ConflictsSimpleFunc) {
	m.m.Set("Simple", f)
}

func (m *Conflicts) Simple(c *testing1.Conflicts) *testing1.Conflicts {
	if f := m.m.Next("Simple"); f != nil {
		return f.(ConflictsSimpleFunc)(c)
	}
	m.t.Helper()
	m.t.Error("unexpected Simple call")
	return nil
}

func (m *Conflicts) HasMore() bool {
	return m.m.HasMore()
}
