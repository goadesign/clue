// Code generated by goa v3.20.0, DO NOT EDIT.
//
// test gRPC server types
//
// Command:
// $ goa gen goa.design/clue/internal/testsvc/design

package server

import (
	testpb "goa.design/clue/internal/testsvc/gen/grpc/test/pb"
	test "goa.design/clue/internal/testsvc/gen/test"
)

// NewGrpcMethodPayload builds the payload of the "grpc_method" endpoint of the
// "test" service from the gRPC request type.
func NewGrpcMethodPayload(message *testpb.GrpcMethodRequest) *test.Fields {
	v := &test.Fields{
		S: message.S,
	}
	if message.I != nil {
		i := int(*message.I)
		v.I = &i
	}
	return v
}

// NewProtoGrpcMethodResponse builds the gRPC response type from the result of
// the "grpc_method" endpoint of the "test" service.
func NewProtoGrpcMethodResponse(result *test.Fields) *testpb.GrpcMethodResponse {
	message := &testpb.GrpcMethodResponse{
		S: result.S,
	}
	if result.I != nil {
		i := int32(*result.I)
		message.I = &i
	}
	return message
}

// NewProtoGrpcStreamResponse builds the gRPC response type from the result of
// the "grpc_stream" endpoint of the "test" service.
func NewProtoGrpcStreamResponse(result *test.Fields) *testpb.GrpcStreamResponse {
	message := &testpb.GrpcStreamResponse{
		S: result.S,
	}
	if result.I != nil {
		i := int32(*result.I)
		message.I = &i
	}
	return message
}

func NewProtoFieldsGrpcStreamResponse(result *test.Fields) *testpb.GrpcStreamResponse {
	v := &testpb.GrpcStreamResponse{
		S: result.S,
	}
	if result.I != nil {
		i := int32(*result.I)
		v.I = &i
	}
	return v
}

func NewGrpcStreamStreamingRequestFields(v *testpb.GrpcStreamStreamingRequest) *test.Fields {
	spayload := &test.Fields{
		S: v.S,
	}
	if v.I != nil {
		i := int(*v.I)
		spayload.I = &i
	}
	return spayload
}
