// Code generated by goa v3.8.3, DO NOT EDIT.
//
// test gRPC client CLI support package
//
// Command:
// $ goa gen goa.design/clue/internal/testsvc/design

package client

import (
	"encoding/json"
	"fmt"

	testpb "goa.design/clue/internal/testsvc/gen/grpc/test/pb"
	test "goa.design/clue/internal/testsvc/gen/test"
)

// BuildGrpcMethodPayload builds the payload for the test grpc_method endpoint
// from CLI flags.
func BuildGrpcMethodPayload(testGrpcMethodMessage string) (*test.Fields, error) {
	var err error
	var message testpb.GrpcMethodRequest
	{
		if testGrpcMethodMessage != "" {
			err = json.Unmarshal([]byte(testGrpcMethodMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"i\": 4434351785751264939,\n      \"s\": \"Corrupti repellat autem sit architecto ut.\"\n   }'")
			}
		}
	}
	v := &test.Fields{}
	if message.S != "" {
		v.S = &message.S
	}
	if message.I != 0 {
		iptr := int(message.I)
		v.I = &iptr
	}

	return v, nil
}
