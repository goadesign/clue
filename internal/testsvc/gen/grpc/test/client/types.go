// Code generated by goa v3.20.0, DO NOT EDIT.
//
// test gRPC client types
//
// Command:
// $ goa gen goa.design/clue/internal/testsvc/design

package client

import (
	testpb "goa.design/clue/internal/testsvc/gen/grpc/test/pb"
	test "goa.design/clue/internal/testsvc/gen/test"
)

// NewProtoGrpcMethodRequest builds the gRPC request type from the payload of
// the "grpc_method" endpoint of the "test" service.
func NewProtoGrpcMethodRequest(payload *test.Fields) *testpb.GrpcMethodRequest {
	message := &testpb.GrpcMethodRequest{
		S: payload.S,
	}
	if payload.I != nil {
		i := int32(*payload.I)
		message.I = &i
	}
	return message
}

// NewGrpcMethodResult builds the result type of the "grpc_method" endpoint of
// the "test" service from the gRPC response type.
func NewGrpcMethodResult(message *testpb.GrpcMethodResponse) *test.Fields {
	result := &test.Fields{
		S: message.S,
	}
	if message.I != nil {
		i := int(*message.I)
		result.I = &i
	}
	return result
}

func NewGrpcStreamResponseFields(v *testpb.GrpcStreamResponse) *test.Fields {
	result := &test.Fields{
		S: v.S,
	}
	if v.I != nil {
		i := int(*v.I)
		result.I = &i
	}
	return result
}

func NewProtoFieldsGrpcStreamStreamingRequest(spayload *test.Fields) *testpb.GrpcStreamStreamingRequest {
	v := &testpb.GrpcStreamStreamingRequest{
		S: spayload.S,
	}
	if spayload.I != nil {
		i := int32(*spayload.I)
		v.I = &i
	}
	return v
}
